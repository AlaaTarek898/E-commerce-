{"version":3,"sources":["turbopack:///[project]/src/app/(auth)/register/page.tsx"],"sourcesContent":["'use client'\r\nimport React, { useState } from 'react'\r\nimport { Input } from \"@/components/ui/input\"\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport { IRegister } from '@/lib/interfaces/Auth';\r\nimport * as zod from 'zod';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport Image from 'next/image';\r\nimport Link from 'next/link';\r\nimport toast from 'react-hot-toast';\r\nimport { useRouter } from 'next/navigation';\r\nexport default function Register() {\r\n    const [error, setError] = useState(null);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\nconst router=useRouter()\r\n  //handle validation\r\n  const schema = zod\r\n    .object({\r\n      name: zod\r\n        .string(\"must be string\")\r\n        .nonempty(\"reauired\")\r\n        .min(3, \"must be at least 3\"),\r\n      email: zod\r\n        .email(\"not valid\")\r\n        .nonempty(\"reauired\")\r\n        .regex(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/, \"not valid\"),\r\n      password: zod.string().regex(/(?=.*?[A-Z])/, \"at least one Upper case\"),\r\n      rePassword: zod.string(),\r\n      telephone: zod.string().regex(/^01[0125][0-9]{8}$/, \"not valid\"),\r\n    })\r\n    .refine(\r\n      function (value) {\r\n        if (value.password == value.rePassword) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      { message: \"password not match\", path: [\"rePassword\"] }\r\n    );\r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm({\r\n    defaultValues: {\r\n      name: \"\",\r\n      email: \"alaatarek2040@gmail.com\",\r\n      password: \"Alaa@123\",\r\n      rePassword: \"Alaa@123\",\r\n      telephone: \"01122334455\"\r\n    },\r\n    resolver: zodResolver(schema),\r\n    mode: 'all'\r\n  })\r\n\r\n\r\n  \r\n async function handleRegister(values: IRegister) {\r\n\r\n    setLoading(true)\r\n  const data= await fetch('https://ecommerce.routemisr.com/api/v1/auth/signup',{\r\n      method:'POST',\r\n       body:JSON.stringify(values),\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      },\r\n     \r\n    })\r\n   \r\n    const res=await data.json()\r\n\r\n     if(data.ok){\r\n      setLoading(false)\r\n      toast.success('Congartulation!')\r\n      router.push('/login')\r\n\r\n     }else{\r\n      setLoading(false)\r\n      setError(res.message)\r\n      toast.error(res.message)\r\n\r\n     }\r\n   \r\n  }\r\n\r\n  return (\r\n    <main className=\"container  w-full flex flex-col md:flex-row justify-between items-center \">\r\n      <div className='w-full md:w-7/12 h-50 md:h-svh relative'>\r\n        <Image src=\"/Side Image.png\" alt='register' fill className=' object-fill ' />\r\n      </div>\r\n      <div className='w-full md:w-4/12 m-auto flex flex-col justify-center items-center gap-3'>\r\n        <h1 className=\"  text-4xl mb-3\">Create an account</h1>\r\n        <p className='text-xl mb-4'>Enter your details below</p>\r\n        <form onSubmit={handleSubmit(handleRegister)} className=' flex flex-col gap-3 w-2/3' >\r\n          {error? <p className='text-red-500'>{error}</p> : null}\r\n          <div>\r\n            <Input className='!input_custom ' type='text' placeholder='enter your name' {...register('name')} />\r\n            {errors.name && <p className='text-red-500'>{errors.name.message}</p>}\r\n          </div>\r\n          <div>\r\n            <Input type='email' placeholder='enter your email' {...register('email')} />\r\n            {errors.email && <p className='text-red-500'>{errors.email.message}</p>}\r\n          </div>\r\n          <div>\r\n            <Input type='password' placeholder='enter your password' {...register('password')} />\r\n            {errors.password && <p className='text-red-500'>{errors.password.message}</p>}\r\n          </div>\r\n          <div>\r\n            <Input type='password' placeholder='enter your rePassword' {...register('rePassword')} />\r\n            {errors.rePassword && <p className='text-red-500'>{errors.rePassword.message}</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <Input type='tel' placeholder='enter your phone' {...register('telephone')} />\r\n            {errors.telephone && <p className='text-red-500'>{errors.telephone.message}</p>}\r\n          </div>\r\n          <button type='submit' disabled={loading} className='bg-red-500 text-white px-4 py-2 rounded-sm'>{loading? 'loading' : 'Create an account'}</button>\r\n          <button className=' text-black border-2 border-black px-4 py-2 rounded-sm'>sign in with Google</button>\r\n\r\n        </form>\r\n        <p > Already have account? <Link href='/login' className=' font-bold ms-3'> Log in</Link></p>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}